version: "3.8"

networks:
  visio_network:
    driver: bridge

services:
  backend_main:
    container_name: backend_main
    build:
      context: ./backend  # Build the image here
      dockerfile: Dockerfile
    image: visio_backend_image:latest  # Tag the built image
    ports:
      - "${BACKEND_MAIN_PORT}:${BACKEND_MAIN_PORT}"
    command: >
      bash -c "
      uvicorn main:app --host 0.0.0.0 --port ${BACKEND_MAIN_PORT} --reload
      "
    volumes:
      - ./backend:/app
    working_dir: /app
    networks:
      - visio_network
    profiles:
      - backend
    environment:
      - BACKEND_MAIN_PORT=${BACKEND_MAIN_PORT}
      # Replace references to localhost:8001 with the service name public_static_server:8001
      - PUBLIC_STATIC_SERVER_URL=http://public_static_server:${PUBLIC_STATIC_SERVER_PORT}
      - LOCAL_STATIC_SERVER_PORT=${LOCAL_STATIC_SERVER_PORT}
      - EYE_TRACKER_URL=${EYE_TRACKER_URL}
      - BASE_URL=${BASE_URL}
      - ENVIRONMENT=${ENVIRONMENT}
      - SIGMA_SERVER_URL=${SIGMA_SERVER_URL}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
    restart: always

  public_static_server:
    container_name: public_static_server
    image: visio_backend_image:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: >
      bash -c "
      ngrok config add-authtoken ${NGROK_AUTH_TOKEN} &&
      ngrok start --all --config /app/.ngrok2/ngrok.yml &
      uvicorn public_static_server:app --host 0.0.0.0 --port ${PUBLIC_STATIC_SERVER_PORT} --reload
      "
    ports:
      - "${PUBLIC_STATIC_SERVER_PORT}:${PUBLIC_STATIC_SERVER_PORT}"
    volumes:
      - ./backend:/app
      - ./ngrok.yml:/app/.ngrok2/ngrok.yml:ro
    working_dir: /app
    networks:
      - visio_network
    profiles:
      - backend
    environment:
      - PUBLIC_STATIC_SERVER_PORT=${PUBLIC_STATIC_SERVER_PORT}
      - NGROK_AUTH_TOKEN=2knqqQuu9XdscuicwsTV4MFs3Qm_66caFpy7tUnz1EpuqKAd4
    restart: always

  local_static_server:
    container_name: local_static_server
    image: visio_backend_image:latest  # Use the prebuilt image
    depends_on:
      - backend_main  # Depends on the first server to build the image
    ports:
      - "${LOCAL_STATIC_SERVER_PORT}:${LOCAL_STATIC_SERVER_PORT}"
    command: >
      bash -c "
      uvicorn local_static_server:app --host 0.0.0.0 --port ${LOCAL_STATIC_SERVER_PORT} --reload
      "
    volumes:
      - ./backend:/app
    working_dir: /app
    networks:
      - visio_network
    profiles:
      - backend
    environment:
      - LOCAL_STATIC_SERVER_PORT=${LOCAL_STATIC_SERVER_PORT}
    restart: always

  frontend:
    container_name: frontend
    build:
      context: ./frontend
    user: "${UID}:${GID}"
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    command: >
      bash -c "
      cd vite && yarn dev --host
      "
    volumes:
      - ./frontend:/app
    working_dir: /app
    networks:
      - visio_network
    profiles:
      - frontend
    environment:
      - VITE_BACKEND_URL=${BACKEND_URL}
      - VITE_PUBLIC_STATIC_SERVER_URL=${PUBLIC_STATIC_SERVER_URL}
    restart: always

  sigma7:
    container_name: sigma7
    build:
      context: ./sigma7
      dockerfile: Dockerfile
    profiles:
      - sigma7
    user: "${UID}:${GID}"
    privileged: true
    devices:
      - "/dev/bus/usb:/dev/bus/usb"
    network_mode: "host"
    working_dir: /workspace
    volumes:
      - ./sigma7:/workspace
    command: >
      bash -c "
      ./configure_network.sh &&
      ./teleimpedance/bin/Debug/teleimpedance;
      bash
      "
    environment:
      - SIGMA7_PORT=${SIGMA7_PORT}
    restart: always

  tobii_connect:
    container_name: tobii_connect
    build:
      context: ./tobii_connect
    ports:
      - "${TOBII_CONNECT_PORT}:${TOBII_CONNECT_PORT}"
    command: >
      bash -c "
      uvicorn capture:app --host 0.0.0.0 --port ${TOBII_CONNECT_PORT} --reload
      "
    volumes:
      - ./tobii_connect:/app
    working_dir: /app
    networks:
      - visio_network
    profiles:
      - tobii
    environment:
      - TOBII_CONNECT_PORT=${TOBII_CONNECT_PORT}
    restart: always

